# This file helps Cline understand the structure and purpose of your project files.
# Lines starting with '#' are comments.

# Describe the main purpose of each file.
[file: main.py]
Role: The main entry point of the Discord bot. It handles bot startup, event loop management, and loading other modules.

[file: commands.py]
Role: Defines Discord slash commands and their corresponding processing. It receives command input from users and executes appropriate processing.

[file: tasks.py]
Role: Defines tasks that are executed periodically (e.g., automatic sending of statistics). Includes task loops using discord.ext.tasks.

[file: voice_events.py]
Role: Defines handlers for events related to voice channels (join, leave, mute, etc.). Includes logic such as recording call time and checking if users have fallen asleep.

[file: database.py]
Role: Defines functions for accessing and manipulating the SQLite database (connection, query execution, data saving/retrieval). Other files interact with the database through this module.

[file: utils.py]
Role: Collects general utility functions and helper functions.

[file: config.py]
Role: Holds configuration-related information for the bot.

[file: formatters.py]
Role: Contains utility functions for formatting and displaying data.

[file: voice_state_manager.py]
Role: Manages the state and logic related to voice channels.

[file: backup_db.py]
Role: Handles the database backup process.

[file: constants.py]
Role: Defines constant values used throughout the bot.

# You can also add more specific rules or information, e.g.,
# [rule: Avoid direct database access outside of database.py]
# Database operations should be performed through functions within database.py.

# [rule: Command logic should reside in commands.py]
# Slash command processing logic should be written in commands.py, and only called from main.py.
